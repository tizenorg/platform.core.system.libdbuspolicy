Authors:
    Kazimierz Krosman <k.krosman@samsung.com>
    Arek Antoniak <a.antoniak2@samsung.com>

Library libdbuspolicy adds functionality of DBUS policy utilization in KDBUS, it complies with DBUS policy specification and supports Cynara check directive.

Usage:
    ./autogen.sh
    ./configure
    make
    make install

The library delivers following API:

    /*!
      libdbuspolicy init
      \param bus_type bus type (SYSTEM or SESSION)
     */
    void* dbuspolicy1_init(unsigned int bus_type);

    /*!
      libdbuspolicy free
      \param configuration pointer with policy configuration acquired using dbuspolicy1_init
     */
    void dbuspolicy1_free(void* configuration);

    /*!
      Check policy for outgoing message
      \param configuration pointer with policy configuration
      \param destination list of message destinations
      \param sender list of message sender names
      \param path path
      \param interface interface name
      \param member member name
      \param message_type message type
      \param error_name (future implementation)
      \param reply_serial (future implementation)
      \param requested_reply (future implementation)
     */
    int dbuspolicy1_check_out(void* configuration,
            const char        *destination,
            const char        *sender,
            const char        *path,
            const char        *interface,
            const char        *member,
            int               message_type,
            const char        *error_name,
            int               reply_serial,
            int               requested_reply);

    /*!
      Check policy for incoming message
      \param configuration pointer with policy configuration
      \param destination list of message destinations
      \param sender list of message sender names
      \param sender_label sender label (should be manually extracted from incomming message)
      \param sender_uid sender uid (should be manually extracted from incomming message)
      \param sender_gid sender gid (should be manually extracted from incomming message)
      \param path path
      \param interface interface name
      \param member member name
      \param message_type message type
      \param error_name (future implementation)
      \param reply_serial (future implementation)
      \param requested_reply (future implementation)
     */
    int dbuspolicy1_check_in(void* configuration,
            const char        *destination,
            const char        *sender,
            const char        *sender_label,
            uid_t             sender_uid,
            gid_t             sender_gid,
            const char        *path,
            const char        *interface,
            const char        *member,
            int               message_type,
            const char        *error_name,
            int               reply_serial,
            int               requested_reply);

    /*!
      Check policy for service ownership
      \param configuration pointer with policy configuration
      \param service service name
     */
    int dbuspolicy1_can_own(void* configuration, const char* const service);
